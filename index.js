// let config = {
// 	host: window.location.hostname,
// 	prefix: prefix,
// 	port: window.location.port,
// 	isSecure: window.location.protocol === "https:"
// };

 
let config = {
	host: 'grupoitg-nordica.us.qlikcloud.com',
	prefix: '/',
	port: 443,
	isSecure: true,
	appId: '0ec8b12d-62cb-44f5-b745-51f8a6d53b64',
	webIntegrationId: 'zQLeIH8-uf87QC9JyLRsdrdZpvhVlkli'
}

// Engine do Qlik
const engine = {

    connectQCS: (config) => new Promise((resolve) => {
        const tenantUri = `https://${config.host}`;

        engine.request(
            config,
            tenantUri,
            '/api/v1/users/me'
        ).then((user) => {
            console.log(`Logged in, ${user.name}`);
            engine.loadCapSAAS(config).then(() => {
                window.requirejs.config({
                    webIntegrationId: config.webIntegrationId,
                    baseUrl: `${tenantUri}${config.prefix}resources`
                });

                window.requirejs(['js/qlik'], (qlik) => {
                    resolve(qlik);
                });
            });
        }, () => {
            
            console.log('Redirecting to Qlik Cloud...');
            const returnTo = encodeURIComponent(window.location.href);
            window.location.href = `${tenantUri}/login?returnto=${returnTo}&qlik-web-integration-id=${config.webIntegrationId}`;
        });
    }),

    connectQSE: (config) => new Promise((resolve) => {
        engine.loadCapabilityApis(config).then(() => {
            const protocol = config.isSecure ? 'https://' : 'http://';
            const port = config.port ? `:${config.port}` : '';
            window.requirejs.config({
                baseUrl: `${protocol}${config.host}${port}${config.prefix}resources`
            });
            window.requirejs(['js/qlik'], (qlik) => resolve(qlik));
        });
    }),

    loadCapSAAS: async (config) => {
        try {
            const tenantUrl = config.host;
            const { webIntegrationId } = config;

            const link = document.createElement('link');
            link.rel = 'stylesheet';
            link.href = `https://${tenantUrl}/resources/autogenerated/qlik-styles.css`;
            document.head.appendChild(link);
            link.loaded = new Promise((resolve) => {
                link.onload = () => {
                    resolve();
                };
            });

            const script = document.createElement('script');
            script.src = `https://${tenantUrl}/resources/assets/external/requirejs/require.js`;
            script.onload = async () => {
                window.require.config({
                    baseUrl: `https://${tenantUrl}/resources`,
                    webIntegrationId
                });
            };
            
            document.body.appendChild(script);
            script.loaded = new Promise((resolve) => {
                script.onload = () => {
                    resolve();
                };
            });

            await Promise.all([link.loaded, script.loaded]);
        } catch (error) {
            throw new Error(error);
        }
    },

    loadCapabilityApis: async (config) => {
        try {
            const capabilityApisJS = document.createElement('script');
            const { prefix } = config;
            const protocol = config.isSecure ? 'https://' : 'http://';
            const port = config.port ? `:${config.port}` : '';
            const baseUrl = `${protocol}${config.host}${port}${prefix}`;

            capabilityApisJS.src = `${baseUrl}resources/assets/external/requirejs/require.js`;
            document.head.appendChild(capabilityApisJS);
            capabilityApisJS.loaded = new Promise((resolve) => {
                capabilityApisJS.onload = () => {
                    resolve();
                };
            });
            const capabilityApisCSS = document.createElement('link');
            capabilityApisCSS.href = `${baseUrl}resources/autogenerated/qlik-styles.css`;
            capabilityApisCSS.type = 'text/css';
            capabilityApisCSS.rel = 'stylesheet';
            document.head.appendChild(capabilityApisCSS);
            capabilityApisCSS.loaded = new Promise((resolve) => {
                capabilityApisCSS.onload = () => {
                    resolve();
                };
            });

            await Promise.all([
                capabilityApisJS.loaded,
                capabilityApisCSS.loaded
            ]);
        } catch (error) {
            throw new Error(error);
        }
    },
    
    request: (config, tenantUri, path, returnJson = true) => new Promise((resolve, reject) => {
        fetch(`${tenantUri}${path}`, {
            mode: 'cors',
            credentials: 'include',
            redirect: 'follow',
            headers: {
                'qlik-web-integration-id': config.webIntegrationId
            }
        }).then((res) => {
            if (res.status < 200 || res.status >= 400) reject(res);
            return returnJson ? resolve(res.json()) : resolve(res);
        }, (err) => { reject(err); });
    })
};

require.config( {
    baseUrl: ( config.isSecure ? "https://" : "http://" ) + config.host + (config.port ? ":" + config.port : "") + config.prefix + "resources",
    webIntegrationId: config.webIntegrationId
} );

engine.connectQCS(config).then(qlik => {
// require( ["js/qlik"], function ( qlik ) {
	qlik.on( "error", function ( error ) {
		$( '#popupText' ).append( error.message + "<br>" );
		$( '#popup' ).fadeIn( 1000 );
	} );
	$( "#closePopup" ).click( function () {
		$( '#popup' ).hide();
	} );

	//callbacks -- inserted here --
	//open apps -- inserted here --
	// var app = qlik.openApp('4aef20d3-a3a7-4e93-9e65-70f11b624521', config);
	// var app = qlik.openApp('Helpdesk Management.qvf', config);
	var app = qlik.openApp(config.appId, config);

	//get objects -- inserted here --
	app.getObject('QV03','JARjh');
	app.getObject('QV02','jTuCwkB');
	app.getObject('QV01','JsVPe');
	app.getObject('QV04','PAppmU', {noSelections:"true"});
	//create cubes and lists -- inserted here --

} );